#!/bin/bash -e

echo "DEBUG: Starting docker-entrypoint script"

# Enable jemalloc for reduced memory usage and latency.
if [ -z "${LD_PRELOAD+x}" ] && [ -f /usr/lib/*/libjemalloc.so.2 ]; then
  export LD_PRELOAD="$(echo /usr/lib/*/libjemalloc.so.2)"
fi

# If running the rails server then create or migrate existing database
if [ "${2}" == "./bin/rails" ] && [ "${3}" == "server" ]; then
  ./bin/rails db:prepare
fi

# Ensure workspaces directory exists with correct permissions
sudo mkdir -p /var/lib/rails-new-io/workspaces
sudo chown rails:rails /var/lib/rails-new-io/workspaces
echo "DEBUG: Created and set permissions for workspaces directory"

if [ ! -d "/var/lib/rails-new-io/rails-env/ruby" ] || [ "$FORCE_ISOLATED_RUBY_REINSTALL" = "true" ]; then
  echo "DEBUG: Will set up isolated Ruby environment"
  echo "Setting up isolated Ruby environment..."

  # Remove existing Ruby environment if it exists
  if [ -d "/var/lib/rails-new-io/rails-env/ruby" ]; then
    echo "DEBUG: Removing existing Ruby environment due to FORCE_ISOLATED_RUBY_REINSTALL=true"
    rm -rf /var/lib/rails-new-io/rails-env/ruby
    rm -rf /var/lib/rails-new-io/rails-env/gems
    rm -rf /var/lib/rails-new-io/rails-env/bundle
  fi

  # Create all required directories
  mkdir -p /var/lib/rails-new-io/rails-env/ruby
  mkdir -p /var/lib/rails-new-io/rails-env/gems/{bin,specifications,gems,extensions}
  mkdir -p /var/lib/rails-new-io/rails-env/bundle
  mkdir -p /var/lib/rails-new-io/{home,config,cache,data}
  # Create Node.js directories with proper structure
  mkdir -p /var/lib/rails-new-io/rails-env/node/{bin,lib,share}
  mkdir -p /var/lib/rails-new-io/rails-env/node_modules
  mkdir -p /var/lib/rails-new-io/rails-env/.corepack
  chown -R rails:rails /var/lib/rails-new-io/rails-env

  echo "DEBUG: Copying system Ruby to isolated environment"
  cp -a /usr/local/* /var/lib/rails-new-io/rails-env/ruby/

  # Set up Node.js symlinks in their own directory
  echo "DEBUG: Setting up Node.js symlinks"
  ln -sf /usr/local/bin/node /var/lib/rails-new-io/rails-env/node/bin/
  ln -sf /usr/local/bin/npm /var/lib/rails-new-io/rails-env/node/bin/
  ln -sf /usr/local/bin/npx /var/lib/rails-new-io/rails-env/node/bin/
  ln -sf /usr/local/bin/corepack /var/lib/rails-new-io/rails-env/node/bin/
  ln -sf /usr/local/bin/yarn /var/lib/rails-new-io/rails-env/node/bin/
  ln -sf /usr/local/bin/yarnpkg /var/lib/rails-new-io/rails-env/node/bin/

  # Run the isolated environment setup in a subshell to avoid polluting the parent environment
  (
    # Unset any existing bundler environment variables that might interfere
    echo "DEBUG: Temporarily unsetting existing bundler environment variables"
    export BUNDLE_WITHOUT=
    export BUNDLE_DEPLOYMENT=
    export BUNDLE_SILENCE_ROOT_WARNING=
    export BUNDLE_PATH=

    # Set up environment for gem installation
    export RAILS_ENV=development
    export NODE_ENV=development
    export GEM_HOME=/var/lib/rails-new-io/rails-env/gems
    export GEM_PATH=/var/lib/rails-new-io/rails-env/gems:/var/lib/rails-new-io/rails-env/ruby/lib/ruby/gems/3.4.0
    export PATH=/var/lib/rails-new-io/rails-env/gems/bin:/var/lib/rails-new-io/rails-env/ruby/bin:/usr/local/bin:/usr/bin:/bin
    export HOME=/var/lib/rails-new-io/home
    export BUNDLE_USER_HOME=/var/lib/rails-new-io/rails-env/bundle     # Fix: Update path to match CommandExecutionService
    export BUNDLE_APP_CONFIG=/var/lib/rails-new-io/rails-env/bundle    # Fix: Update path to match CommandExecutionService

    echo "DEBUG: Updating RubyGems to 3.6.3"
    /var/lib/rails-new-io/rails-env/ruby/bin/gem update --system 3.6.3

    echo "DEBUG: Installing bundler 2.6.3 in our isolated environment"
    /var/lib/rails-new-io/rails-env/ruby/bin/gem install bundler -v 2.6.3

    echo "DEBUG: Configuring bundler"
    /var/lib/rails-new-io/rails-env/gems/bin/bundle config set --local app_config /var/lib/rails-new-io/rails-env/bundle
    /var/lib/rails-new-io/rails-env/gems/bin/bundle config unset --local without
    /var/lib/rails-new-io/rails-env/gems/bin/bundle config set --local with 'development test'

    echo "DEBUG: Bundler configured:\n\n$(/var/lib/rails-new-io/rails-env/gems/bin/bundle config list)"

    echo "DEBUG: Installing Rails 8.0.1"
    /var/lib/rails-new-io/rails-env/ruby/bin/gem install rails -v 8.0.1

    # Create the rails executable
    cat > /var/lib/rails-new-io/rails-env/gems/bin/rails << 'EOF'
#!/var/lib/rails-new-io/rails-env/ruby/bin/ruby
require "rubygems"
gem "railties", "8.0.1"  # Force the specific version
require "rails/cli"
EOF

    chmod +x /var/lib/rails-new-io/rails-env/gems/bin/rails
  )
fi

exec "${@}"
